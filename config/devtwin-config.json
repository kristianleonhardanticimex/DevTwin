{
  "categories": [
    {
      "id": "languages-csharp",
      "name": "C# / .NET",
      "description": "Best practices and patterns for C# and .NET development, including project structure, DI, configuration, logging, and testing.",
      "subcategories": [
        {
          "id": "csharp-project-structure",
          "name": "Project Structure",
          "features": [
            { "id": "csharp-clean-architecture", "name": "Clean Architecture", "template": "3-1-1-clean-architecture" },
            { "id": "csharp-feature-folders", "name": "Feature Folders", "template": "3-1-2-feature-folders" }
          ]
        },
        {
          "id": "csharp-dependency-injection",
          "name": "Dependency Injection",
          "features": [
            { "id": "csharp-use-built-in-di", "name": "Use Built-in DI", "template": "3-2-1-use-built-in-di" },
            { "id": "csharp-service-lifetimes", "name": "Service Lifetimes", "template": "3-2-2-service-lifetimes" }
          ]
        },
        {
          "id": "csharp-configuration",
          "name": "Configuration & Secrets",
          "features": [
            { "id": "csharp-appsettings", "name": "appsettings.json", "template": "3-3-1-appsettings" },
            { "id": "csharp-user-secrets", "name": "User Secrets", "template": "3-3-2-user-secrets" },
            { "id": "csharp-env-vars", "name": "Environment Variables", "template": "3-3-3-env-vars" }
          ]
        },
        {
          "id": "csharp-logging",
          "name": "Logging & Monitoring",
          "features": [
            { "id": "csharp-serilog", "name": "Serilog", "template": "3-4-1-serilog" },
            { "id": "csharp-health-checks", "name": "Health Checks", "template": "3-4-2-health-checks" },
            { "id": "csharp-app-insights", "name": "Application Insights", "template": "3-4-3-app-insights" }
          ]
        },
        {
          "id": "csharp-unit-testing",
          "name": "Unit Testing",
          "features": [
            { "id": "csharp-xunit", "name": "xUnit", "template": "3-5-1-xunit" },
            { "id": "csharp-nunit", "name": "NUnit", "template": "3-5-2-nunit" },
            { "id": "csharp-mstest", "name": "MSTest", "template": "3-5-3-mstest" }
          ]
        },
        {
          "id": "csharp-other",
          "name": "Other C#/.NET Features",
          "features": [
            { "id": "csharp-aspnet-webapi", "name": "ASP.NET Web API" },
            { "id": "csharp-ef-core", "name": "Entity Framework Core" },
            { "id": "csharp-linq", "name": "LINQ" },
            { "id": "csharp-minimal-apis", "name": "Minimal APIs" },
            { "id": "csharp-mediatr", "name": "MediatR" },
            { "id": "csharp-background-services", "name": "Background Services (IHostedService)" },
            { "id": "csharp-nullable-ref-types", "name": "Nullable Reference Types" }
          ]
        }
      ]
    },
    {
      "id": "languages-javascript",
      "name": "JavaScript / TypeScript",
      "description": "Best practices for JavaScript and TypeScript, including frontend frameworks and tooling.",
      "subcategories": [
        {
          "id": "js-core",
          "name": "Core Language Features",
          "features": [
            { "id": "js-es-modules", "name": "ES Modules" },
            { "id": "js-async-await", "name": "Async/Await" },
            { "id": "js-promises", "name": "Promises" },
            { "id": "js-typescript", "name": "Type Safety with TypeScript" },
            { "id": "js-jsdoc", "name": "JSDoc" }
          ]
        },
        {
          "id": "js-frontend-frameworks",
          "name": "Frontend Frameworks",
          "features": [
            { "id": "js-react", "name": "React", "template": "1-1-react" },
            { "id": "js-angular", "name": "Angular" },
            { "id": "js-vue", "name": "Vue" }
          ]
        },
        {
          "id": "js-ui-testing",
          "name": "UI Testing",
          "features": [
            { "id": "js-playwright", "name": "Playwright" },
            { "id": "js-testing-library", "name": "Testing Library (React, Angular)" },
            { "id": "js-storybook", "name": "Storybook" }
          ]
        }
      ]
    }
  ]
}
